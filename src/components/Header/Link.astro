---
export interface Props {
  href: string;
}
const { href } = Astro.props;
const sectionId = href.replace('#','');
---
<!-- TODO: add  this event to home-->
<script define:vars={{ sectionId }}>
// TODO: use a web component instead
  function updateLink(section, limit) {
    const {top,bottom} = section.getBoundingClientRect();
    const isInsideTheSection= top<limit&&bottom>limit;
    const anchors = document.getElementsByClassName(`link-${sectionId}`)
    for (const anchor of anchors) {
      anchor.classList.toggle('active',isInsideTheSection)
    }
  }
  document.addEventListener("DOMContentLoaded", function () {
    const section= document.getElementById(sectionId);
    if (section) {
      const windowHeight = window.innerHeight;
      const limit = windowHeight*0.4;
      updateLink(section,limit)
      document.addEventListener("scroll", ()=>{
        updateLink(section,limit)
      });
    }
  });
  
</script>
<a
  class="p-1 text-[var(--default-font-color)] no-underline transition-all duration-200 ease-in-out hover:text-[var(--default-secundary-font-color)] hover:drop-shadow-[0rem_0rem_0.3rem_aqua] [&.active]:drop-shadow-[0rem_0rem_0.3rem_aqua] [&.active]:text-[var(--default-secundary-font-color)] change-sidebar"
  href={href}
  class:list={[`link-${sectionId}`]}
  >
    <slot />
</a>

